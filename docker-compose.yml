services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: angola-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: angola_localization
      POSTGRES_USER: angola_user
      POSTGRES_PASSWORD: angola_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=pt_BR.UTF-8 --lc-ctype=pt_BR.UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - angola-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U angola_user -d angola_localization"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: angola-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass angola_redis_password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - angola-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Node.js Application
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: angola-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://angola_user:angola_password@postgres:5432/angola_localization?schema=public
      REDIS_URL: redis://:angola_redis_password@redis:6379/0
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 24h
      JWT_REFRESH_EXPIRES_IN: 7d
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      CACHE_TTL: 3600
      CACHE_PREFIX: angola_api
      CORS_ORIGIN: "*"
      CORS_CREDENTIALS: "true"
      LOG_LEVEL: info
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - angola-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: angola-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - app
    networks:
      - angola-network

  # Adminer (Database Management)
  adminer:
    image: adminer:latest
    container_name: angola-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - angola-network

  # Redis Commander (Redis Management)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: angola-redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379:0:angola_redis_password
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - angola-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  angola-network:
    driver: bridge
