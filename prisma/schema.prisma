// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Province {
  id                  String   @id @default(cuid())
  name                String   @unique
  code                String   @unique @db.VarChar(10)
  capital             String
  population          String
  area                String
  density             String
  region              String
  timezone            String
  currency            String
  language            String
  religion            String
  government          String
  chiefAdministrator  String   @map("chief_administrator")
  areaCode            String   @map("area_code")
  postalCode          String   @map("postal_code")
  latitude            Decimal  @db.Decimal(10, 6)
  longitude           Decimal  @db.Decimal(10, 6)
  createdAt           DateTime @default(now()) @map("created_at")
  updatedAt           DateTime @updatedAt @map("updated_at")

  // Relations
  municipalities      Municipality[]

  // Indexes
  @@index([name])
  @@index([code])
  @@index([region])
  @@index([latitude, longitude])
  @@map("provinces")
}

model Municipality {
  id                  String   @id @default(cuid())
  name                String
  code                String   @unique @db.VarChar(20)
  provinceCode        String   @map("province_code")
  population          String
  area                String
  density             String
  region              String
  timezone            String
  currency            String
  language            String
  religion            String
  government          String
  chiefAdministrator  String   @map("chief_administrator")
  areaCode            String   @map("area_code")
  postalCode          String   @map("postal_code")
  latitude            Decimal  @db.Decimal(10, 6)
  longitude           Decimal  @db.Decimal(10, 6)
  createdAt           DateTime @default(now()) @map("created_at")
  updatedAt           DateTime @updatedAt @map("updated_at")

  // Relations
  province            Province @relation(fields: [provinceCode], references: [code], onDelete: Cascade)

  // Indexes
  @@index([name])
  @@index([code])
  @@index([provinceCode])
  @@index([region])
  @@index([latitude, longitude])
  @@map("municipalities")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      UserRole @default(USER)
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Indexes
  @@index([email])
  @@index([role])
  @@index([isActive])
  @@map("users")
}

enum UserRole {
  USER
  ADMIN
  OWNER
}
